#!/usr/bin/python3
# Rick Bell Feb 23, 2017

import servo
import stepper
import time
import config



heading_sp = 240.0  # compass heading setpoint ( geo info added laterng
heading = 0.0       
pitch = 0.0         
tilt = 0.0   

t_interval = 0.0
t_print = 0.0


# Servo PID parameters
Servo_P_gain = 0.24 # 0.27
Servo_I_gain = 0.45  # 0.19
Servo_D_gain = 0.002  # 0.01
Servo_I_windup = 0.1  # 3.5
Servo_Bias = 12.75  # 13.75
Servo_Min = 5.0  # 5.0
Servo_Max = 17.0 # 17.0
# -------------------------- Calculated Variables ------------
Servo_Derivator = 0.0
Servo_Integrator = 0.0
Servo_t_pid =0.0
Servo_t_PID = 0.75
Servo_pitch_sp = 1.0
Servo_output = 0.0


while True:
    # get all global variables from config.py file
    
    heading = config.heading
    stepper_error = config.stepper_error    
    stepper_error1 = config.stepper_error1
    stepper_direction = config.stepper_direction
    stepper_hysterysis = config.stepper_hysterysis
    speed = config.speed
    stepper_direction = config.stepper_direction
    
    
    # run stepper module
    stepper.SetPosition(heading_sp, heading)
    
    t_interval = time.time()        
    if (t_interval >= t_print + 1):
        t_print = t_interval
        print("Heading is ", heading, "heading sp is ", heading_sp, " error is ",  stepper_error, "error1 is ", stepper_error1, "Speed set to ", speed, "Direction set to ", stepper_direction)        
     
     
    # run servo module 
     
    #--------------------------------------------
    ''' # PID Control for Tilt Servo
    
    # Send contrl variable input to PID loop module
    Pid.update(pitch)
    Servo_output = Pid.output
    '''
        #-----------Servo PID Loop -------------
        # check that servo is not in hysterysis deadband range and bypass PID if so
    #servo_stop = servo.SetPosition()  
    #print ("Servo Stop = ", servo_stop)    
    #if (t_interval - Servo_t_pid) > Servo_t_PID and servo_stop == 0: 
    pitch = config.pitch

    if (t_interval - Servo_t_pid) > Servo_t_PID:
        Servo_error = Servo_pitch_sp - pitch
        Servo_P_value = Servo_P_gain * Servo_error
        Servo_D_value = Servo_D_gain * (Servo_error - Servo_Derivator)
        Servo_Derivator = Servo_error
        Servo_Integrator = Servo_Integrator + Servo_error
        if Servo_Integrator > Servo_I_windup:
            Servo_Integrator = Servo_I_windup
        elif Servo_Integrator < -Servo_I_windup:
            Servo_Integrator = -Servo_I_windup
        Servo_I_value = Servo_Integrator * Servo_I_gain
        Servo_output = Servo_P_value + Servo_I_value + Servo_D_value + Servo_Bias 
        
        if(Servo_output < Servo_Min):
            Servo_output = Servo_Min
        if(Servo_output > Servo_Max):
            Servo_output = Servo_Max
        # Send servo position to Servo module
        servo.SetPosition(Servo_output, pitch, Servo_pitch_sp)
        print( "Tracker Servo out ", Servo_output, "Pitch ", pitch,  "Pitch setpt ", Servo_pitch_sp)
        Servo_t_pid = t_interval 
     
    time.sleep(0.005)
 
